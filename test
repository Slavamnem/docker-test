version: "3"
services:
  app:
    build: .
    ports:
    - 8081:80
    volumes:
    - .:/var/www/html
    links:
      - db

  db:
    image: postgres:12.1
    restart: always
    ports:
      - 54321:5432
    environment:
      - POSTGRES_PASSWORD=slava1234
      - POSTGRES_USER=root

  adminer:
    image: adminer:4.7.5
    restart: always
    ports:
      - 8082:8080
    environment:
      PMA_HOST: db
      POSTGRES_USER: root
      POSTGRES_PASSWORD: slava1234


#  db:
#    image: mysql:5.7.28
#    restart: always
#    ports:
#    - 33061:3306
#    environment:
#    - MYSQL_ROOT_PASSWORD=slava1234
#    - MYSQL_DATABASE=docker_test
#
#  phpmyadmin:
#    depends_on:
#    - db
#    image: phpmyadmin/phpmyadmin:4.9.1
#    restart: always
#    ports:
#    - 8082:80
#    environment:
#      PMA_HOST: db
#      MYSQL_USERNAME: root
#      MYSQL_ROOT_PASSWORD: slava1234





user nginx;
daemon off;
worker_processes auto;
worker_rlimit_nofile 32768;
error_log /dev/stdout info;

events {
    worker_connections 8192;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    server_tokens off;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    log_not_found off;
    keepalive_timeout 60;
    types_hash_max_size 2048;
    server_name_in_redirect off;
    client_body_buffer_size 8K;
    client_header_buffer_size 2k;
    client_max_body_size 100m;

    proxy_buffering   on;
    proxy_buffer_size    16k;
    proxy_buffers        32   16k;
    fastcgi_buffers 8 16k;
    fastcgi_buffer_size 32k;

    access_log /dev/stdout;

    gzip on;
    gzip_static on;
    gzip_vary on;
    gzip_min_length 1100;
    gzip_buffers 64 8k;
    gzip_comp_level 6;
    gzip_http_version 1.1;
    gzip_proxied any;
    gzip_disable "MSIE [1-6]\.(?!.*SV1)";
    gzip_types text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript;

    server {
        listen 8081;
        server_name docker-test.loc;
        index index.php index.html;
        #root /home/slava/web/docker-test;
        root /var/www/html;
        #root /var/www/application/public;
        #root /var/;

        location ~* ^.+\.(jpg|jpeg|gif|png|ico|css|zip|tgz|gz|rar|bz2|doc|xls|exe|pdf|ppt|txt|tar|mid|midi|wav|bmp|rtf|js)$ {
            expires 1m;
        }
        location = /status {
            access_log off;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            allow 127.0.0.1/32;
            deny all;
            include /etc/nginx/fastcgi_params;
            fastcgi_pass php-fpm:9000;
        }
        location / {
            try_files $uri $uri/ /index.php?$query_string;
        }
        location ~ \.php$ {
            try_files $uri = 404;
            fastcgi_pass php-fpm:9000;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            include /etc/nginx/fastcgi_params;
        }
        location ~ /\. { deny all; }
    }

    include /etc/nginx/conf.d/*.conf;
}





server {
    listen       80;
    server_name  localhost;

    #charset koi8-r;
    #access_log  /var/log/nginx/host.access.log  main;

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}



